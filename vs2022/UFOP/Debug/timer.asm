; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31933.0 

	TITLE	D:\FreeApoc\Apocalypse\vs2022\UFOP\Debug\timer.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GAME_TICK_COUNTER
PUBLIC	_delay
_BSS	SEGMENT
_GAME_TICK_COUNTER DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_m_timer_id:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__D0DFFAC6_winpackagefamily@h DB 01H
__D0D0F397_winapifamily@h DB 01H
__1ADC5BE7_begin_code@h DB 01H
__8D67BD40_close_code@h DB 01H
__DDEA9788_SDL_platform@h DB 01H
__94A3FDDD_sdkddkver@h DB 01H
__4BD2FD7B_SDL_config@h DB 01H
__CD417A16_concurrencysal@h DB 01H
__18C11F8D_sal@h DB 01H
__BD42D05E_vadefs@h DB 01H
__2DC9DF70_vcruntime@h DB 01H
__6569C2CA_corecrt@h DB 01H
__C9393812_stddef@h DB 01H
__F19000F7_stdarg@h DB 01H
__EBA520B6_SDL_stdinc@h DB 01H
__C6E6D7CD_SDL_main@h DB 01H
__C819AA9E_SDL_assert@h DB 01H
__D7AB785A_SDL_atomic@h DB 01H
__7CDE7143_SDL_error@h DB 01H
__C264589F_SDL_endian@h DB 01H
__BF5E9F8E_SDL_mutex@h DB 01H
__741AE07E_corecrt_math@h DB 01H
__91D68F2D_math@h DB 01H
__C66E9EB9_vcruntime_startup@h DB 01H
__F6CEABBE_corecrt_startup@h DB 01H
__61BDDCD5_corecrt_wprocess@h DB 01H
__F57902D7_process@h DB 01H
__0C4DD541_SDL_thread@h DB 01H
__1FA23C7D_SDL_rwops@h DB 01H
__4BA16835_SDL_audio@h DB 01H
__A80A68DA_SDL_clipboard@h DB 01H
__99FA516B_intrin0@inl@h DB 01H
__552C563B_setjmp@h DB 01H
__3BCDA13C_mmintrin@h DB 01H
__6C20D4D3_corecrt_malloc@h DB 01H
__20BB4341_malloc@h DB 01H
__AD1CB324_xmmintrin@h DB 01H
__C87E3AE8_emmintrin@h DB 01H
__17DF5261_pmmintrin@h DB 01H
__A70621E3_tmmintrin@h DB 01H
__8E3D3460_smmintrin@h DB 01H
__EB5FBDAC_nmmintrin@h DB 01H
__3EE447E2_wmmintrin@h DB 01H
__F5700AE5_zmmintrin@h DB 01H
__C264A82F_immintrin@h DB 01H
__78A7496A_ammintrin@h DB 01H
__74E2446C_mm3dnow@h DB 01H
__731AEA4C_intrin@h DB 01H
__68067E44_SDL_cpuinfo@h DB 01H
__64E89E41_SDL_pixels@h DB 01H
__BFEA0781_SDL_rect@h DB 01H
__03192F33_SDL_blendmode@h DB 01H
__00CE5C3F_SDL_surface@h DB 01H
__D71AB72D_SDL_video@h DB 01H
__0166E892_SDL_scancode@h DB 01H
__1B40CEEC_SDL_keycode@h DB 01H
__92B90C80_SDL_keyboard@h DB 01H
__41FFAFA3_SDL_mouse@h DB 01H
__9364B404_SDL_joystick@h DB 01H
__049FB5AB_SDL_sensor@h DB 01H
__5B890460_SDL_gamecontroller@h DB 01H
__362302C9_SDL_quit@h DB 01H
__EB78B272_SDL_touch@h DB 01H
__18F5D7F5_SDL_gesture@h DB 01H
__9C10120D_SDL_events@h DB 01H
__D54FBDEE_SDL_filesystem@h DB 01H
__627295A5_SDL_haptic@h DB 01H
__57D222F1_SDL_hints@h DB 01H
__28D3E821_SDL_loadso@h DB 01H
__52E9A77B_SDL_log@h DB 01H
__E1B8B927_SDL_messagebox@h DB 01H
__28C501EE_SDL_metal@h DB 01H
__512DBC7B_SDL_power@h DB 01H
__75481EC3_SDL_render@h DB 01H
__ECCEE624_SDL_shape@h DB 01H
__D14E8A6D_SDL_system@h DB 01H
__596BF456_SDL_timer@h DB 01H
__130AA0EB_SDL_version@h DB 01H
__A8160445_SDL_locale@h DB 01H
__C1EAB8A4_SDL_misc@h DB 01H
__0E484B1D_SDL@h DB 01H
__A2143F22_corecrt_stdio_config@h DB 01H
__829E1958_corecrt_wstdio@h DB 01H
__6DFAE8B8_stdio@h DB 01H
__3432B400_timer@h DB 01H
__A3E06D88_timer@c DB 01H
msvcjmc	ENDS
_DATA	SEGMENT
_delay	DD	037H
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_timer_init
PUBLIC	_dos_delay
PUBLIC	_remove_timer
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BI@ELLLOEDP@ERROR?3?5Init?5SDL?5timer?4?5@ ; `string'
PUBLIC	??_C@_07EDGOICEI@?$CFs?5?$CFs?5?6@		; `string'
PUBLIC	??_C@_0BH@NJHNLLJJ@ERROR?3?5Add?5SDL?5timer?4?5@ ; `string'
EXTRN	_SDL_GetError:PROC
EXTRN	_SDL_Delay:PROC
EXTRN	_SDL_AddTimer:PROC
EXTRN	_SDL_RemoveTimer:PROC
EXTRN	_SDL_Init:PROC
EXTRN	_SDL_QuitSubSystem:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BH@NJHNLLJJ@ERROR?3?5Add?5SDL?5timer?4?5@
CONST	SEGMENT
??_C@_0BH@NJHNLLJJ@ERROR?3?5Add?5SDL?5timer?4?5@ DB 'ERROR: Add SDL timer'
	DB	'. ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07EDGOICEI@?$CFs?5?$CFs?5?6@
CONST	SEGMENT
??_C@_07EDGOICEI@?$CFs?5?$CFs?5?6@ DB '%s %s ', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ELLLOEDP@ERROR?3?5Init?5SDL?5timer?4?5@
CONST	SEGMENT
??_C@_0BI@ELLLOEDP@ERROR?3?5Init?5SDL?5timer?4?5@ DB 'ERROR: Init SDL tim'
	DB	'er. ', 00H					; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\FreeApoc\Apocalypse\UFOP\C_Sources\timer.c
;	COMDAT _sdl_timer_callback
_TEXT	SEGMENT
_interval$ = 8						; size = 4
_sdl_timer_callback PROC				; COMDAT

; 17   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A3E06D88_timer@c
	call	@__CheckForDebuggerJustMyCode@4

; 18   :     GAME_TICK_COUNTER++;     

	mov	eax, DWORD PTR _GAME_TICK_COUNTER
	add	eax, 1
	mov	DWORD PTR _GAME_TICK_COUNTER, eax

; 19   :     return (interval);

	mov	eax, DWORD PTR _interval$[ebp]

; 20   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sdl_timer_callback ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\FreeApoc\Apocalypse\UFOP\C_Sources\timer.c
;	COMDAT _remove_timer
_TEXT	SEGMENT
_remove_timer PROC					; COMDAT

; 48   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A3E06D88_timer@c
	call	@__CheckForDebuggerJustMyCode@4

; 49   :     SDL_RemoveTimer(m_timer_id);

	mov	eax, DWORD PTR _m_timer_id
	push	eax
	call	_SDL_RemoveTimer
	add	esp, 4

; 50   :     SDL_QuitSubSystem(SDL_INIT_TIMER);

	push	1
	call	_SDL_QuitSubSystem
	add	esp, 4

; 51   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_remove_timer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\FreeApoc\Apocalypse\UFOP\C_Sources\timer.c
;	COMDAT _dos_delay
_TEXT	SEGMENT
_time_l$ = 8						; size = 4
_dos_delay PROC						; COMDAT

; 42   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A3E06D88_timer@c
	call	@__CheckForDebuggerJustMyCode@4

; 43   :     SDL_Delay(time_l);

	mov	eax, DWORD PTR _time_l$[ebp]
	push	eax
	call	_SDL_Delay
	add	esp, 4

; 44   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_dos_delay ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\FreeApoc\Apocalypse\UFOP\C_Sources\timer.c
;	COMDAT _timer_init
_TEXT	SEGMENT
_ret_val$ = -8						; size = 4
_timer_init PROC					; COMDAT

; 24   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A3E06D88_timer@c
	call	@__CheckForDebuggerJustMyCode@4

; 25   :     int ret_val = 0;

	mov	DWORD PTR _ret_val$[ebp], 0

; 26   :     if (SDL_Init(SDL_INIT_TIMER))

	push	1
	call	_SDL_Init
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@timer_init

; 27   :     {
; 28   :         printf("%s %s \n", "ERROR: Init SDL timer. ", SDL_GetError());

	call	_SDL_GetError
	push	eax
	push	OFFSET ??_C@_0BI@ELLLOEDP@ERROR?3?5Init?5SDL?5timer?4?5@
	push	OFFSET ??_C@_07EDGOICEI@?$CFs?5?$CFs?5?6@
	call	_printf
	add	esp, 12					; 0000000cH

; 29   :         ret_val |= -1;

	mov	DWORD PTR _ret_val$[ebp], -1
$LN2@timer_init:

; 30   :     }
; 31   :    
; 32   :     m_timer_id = SDL_AddTimer(delay, sdl_timer_callback, NULL);

	push	0
	push	OFFSET _sdl_timer_callback
	mov	eax, DWORD PTR _delay
	push	eax
	call	_SDL_AddTimer
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _m_timer_id, eax

; 33   :     if (!m_timer_id)

	cmp	DWORD PTR _m_timer_id, 0
	jne	SHORT $LN3@timer_init

; 34   :     {
; 35   :         printf("%s %s \n", "ERROR: Add SDL timer. ", SDL_GetError());

	call	_SDL_GetError
	push	eax
	push	OFFSET ??_C@_0BH@NJHNLLJJ@ERROR?3?5Add?5SDL?5timer?4?5@
	push	OFFSET ??_C@_07EDGOICEI@?$CFs?5?$CFs?5?6@
	call	_printf
	add	esp, 12					; 0000000cH

; 36   :         ret_val |= -1;

	mov	DWORD PTR _ret_val$[ebp], -1
$LN3@timer_init:

; 37   :     }
; 38   :     return ret_val;

	mov	eax, DWORD PTR _ret_val$[ebp]

; 39   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_timer_init ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 956  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-24]
	mov	ecx, 6
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 957  :         int _Result;
; 958  :         va_list _ArgList;
; 959  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 960  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 961  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 962  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 963  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 644  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __6DFAE8B8_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 645  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 646  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 90   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A2143F22_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
